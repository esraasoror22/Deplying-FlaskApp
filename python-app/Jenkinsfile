pipeline {

    agent {

        label 'jenkins-slave-1'
    }

    environment {

        DOCKER_CREDENTIALS_ID = 'esraaelhasanen' // ID of Docker Hub credentials in Jenkins
        DOCKER_IMAGE_NAME = 'esraaelhasanen/flask-img'

    }


    stages {

        stage('Clone Repo') {

            steps {
                script {

                  if (fileExists('Deplying-FlaskApp')) {
                        // If it exists, delete it
                        sh 'rm -rf Deplying-FlaskApp'
                    }
                
                    sh "git clone https://github.com/esraasoror22/Deplying-FlaskApp.git"
                }


            }

        }

        stage('Docker Login') {
            steps {
                script {
                    // Log in to Docker Hub using credentials from Jenkins
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    }
                }
            }
        }
        
        stage('Build docker image') {

            steps {
                script {
                    
                    dir('Deplying-FlaskApp/python-app') {
                        // Build and push the Docker image using Docker CLI commands
                        sh "whoami"
                        sh "docker build -t ${env.DOCKER_IMAGE_NAME}:1.0.0 ."
                        sh 'docker push esraaelhasanen/flask-img:1.0.0'

                        //sh "docker push ${env.DOCKER_IMAGE_NAME}:1.0.0"
                    }

                }

            }
        }

        stage('Run container') {

            steps {

                script{

                  sh "docker run -p 5000:5000 -name c1 -d ${env.DOCKER_IMAGE_NAME}"
                }

            }
        }



    }

}
